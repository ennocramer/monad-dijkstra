name: CI Pipeline

on:
  push:
  pull_request:
    types:
      - opened
      - synchronize

permissions:
  contents: read

jobs:
  build:
    name: GHC ${{ matrix.ghc }} (${{ matrix.os }})

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macOS-latest ]
        ghc: [ '8.4', '8.6', '8.8', '8.10', '9.0', '9.2', '9.4', '9.6' ]
        exclude:
          - os: macOS-latest
            ghc: '8.4'

    runs-on: ${{ matrix.os }}

    steps:
      - name: Environment
        run: |
          echo "matrix=${{ toJSON(matrix) }}"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup GHC/Cabal
        uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: ${{ matrix.ghc }}

      - name: Configure
        run: |
          cabal configure --enable-test --enable-benchmarks --disable-documentation
          cabal build --dry-run
        # The last step generates dist-newstyle/cache/plan.json for the cache key.

      - name: Restore Cache
        uses: actions/cache/restore@v3
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Build Dependencies
        run: cabal build all --only-dependencies

      # Cache dependencies already here, so that we do not have to rebuild them should the subsequent steps fail.
      - name: Save Cache
        uses: actions/cache/save@v3
        # Caches are immutable, trying to save with the same key would error.
        if: ${{ steps.cache.outputs.cache-primary-key != steps.cache.outputs.cache-matched-key }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - name: Build Project
        run: cabal build all

      - name: Run Tests
        run: cabal test all

      - name: Generate Documentation
        run: cabal haddock all

      - name: Check Cabal File
        run: cabal check
