name: CI Pipeline

on:
  push:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  cabal:
    name: GHC ${{ matrix.ghc }} (${{ matrix.os }})

    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest ]
        ghc: [ 8.4.4, 8.6.5, 8.8.3, 8.10.2, 9.0.1 ]
        exclude:
          - os: macOS-latest
            ghc: 8.4.4

    env:
      ARGS: --enable-tests --enable-benchmarks

    runs-on: ${{ matrix.os }}

    steps:
      - name: Environment
        run: |
          echo "matrix=${{ toJSON(matrix) }}"
          echo "ARGS=$ARGS"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Haskell
        uses: haskell/actions/setup@v1
        id: setup-haskell-cabal
        with:
          ghc-version: ${{ matrix.ghc }}

      - name: Cabal Update
        run: cabal update

      - name: Cabal Freeze
        run: cabal freeze $ARGS

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
            dist-newstyle
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-

      - name: Build Dependencies
        run: cabal build $ARGS --only-dependencies

      - name: Build Project
        run: cabal build $ARGS

      - name: Run Tests
        run: cabal test $ARGS

      - name: Generate Documentation
        run: cabal haddock $ARGS

      - name: Package Distribution
        run: cabal sdist
